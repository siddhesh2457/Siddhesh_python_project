1)
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Employee Details</title>
  <!-- Include AngularJS Library -->
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body ng-app="employeeApp">

  <!-- AngularJS Controller -->
  <div ng-controller="EmployeeController">
    <h2>Employee Details</h2>
    <table border="1" cellpadding="10">
      <thead>
        <tr>
          <th>Employee Name</th>
          <th>Employee ID</th>
          <th>Pin Code</th>
          <th>Address</th>
        </tr>
      </thead>
      <tbody>
        <!-- ng-repeat to display employee details in table rows -->
        <tr ng-repeat="employee in employees">
          <td>{{ employee.name }}</td>
          <td>{{ employee.id }}</td>
          <td>{{ employee.pinCode }}</td>
          <td>{{ employee.address }}</td>
        </tr>
      </tbody>
    </table>
  </div>

  <script>
    // AngularJS application
    var app = angular.module('employeeApp', []);

    // AngularJS controller
    app.controller('EmployeeController', function($scope) {
      // Sample data for employees
      $scope.employees = [
        { name: 'John Doe', id: 'E101', pinCode: '12345', address: '123 Main St, City' },
        { name: 'Jane Smith', id: 'E102', pinCode: '67890', address: '456 Elm St, City' },
        { name: 'Sam Wilson', id: 'E103', pinCode: '11223', address: '789 Oak St, City' },
        { name: 'Emily Davis', id: 'E104', pinCode: '44556', address: '101 Pine St, City' }
      ];
    });
  </script>

</body>
</html>


2)
const express = require('express');
const app = express();
const Joi = require('joi'); // For data validation

const port = 3000;

// Middleware to parse JSON request bodies
app.use(express.json());

// Dummy in-memory database
let users = [];

// Schema for validating user data using Joi
const userSchema = Joi.object({
  name: Joi.string().min(3).required(),
  email: Joi.string().email().required(),
  password: Joi.string().min(6).required()
});

// Route to create a new user (POST /users)
app.post('/users', (req, res) => {
  const { error } = userSchema.validate(req.body);
  if (error) {
    return res.status(400).json({
      error: error.details[0].message
    });
  }

  // Create a new user object
  const newUser = {
    id: users.length + 1, // Simple ID generation
    name: req.body.name,
    email: req.body.email,
    password: req.body.password
  };

  // Add the new user to the "database"
  users.push(newUser);

  // Respond with the created user
  res.status(201).json({
    message: 'User created successfully',
    user: newUser
  });
});

// Route to get all users (GET /users)
app.get('/users', (req, res) => {
  res.status(200).json(users);
});

// Start the server
app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});
